// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply plugin: "org.sonarqube"
apply plugin: "com.github.dawnwords.jacoco.badge"

ext.versions = [
        'compileSdkVersion'      : 29,
        'minSdkVersion'          : 25,
        'targetSdkVersion'       : 29,
        'supportLibrary'         : '28.0.2',
        'okhttp'                 : '4.2.2',
        'retrofit'               : '2.6.2',
        'archLifecycle'          : '1.1.1',
        'archNavigation'         : '1.0.0',
        'fragmentx'              : '1.1.0',
        'dagger'                 : '2.26',
        'mockitoKotlin'          : '1.6.0',
        'mockitoKotlin2'         : '2.1.0',
        'mockitoInline'          : '2.25.0',
        'archRuntime'            : '2.1.0',
        'archLifecycleExtensions': '2.2.0',
        'appcompat'              : '1.1.0',
        'androidxAnnotations'    : '1.0.1',
        'constraintlayout'       : '1.1.3',
        'androidMaterial'        : '1.1.0',
        'playServicesVision'     : '20.0.0',
        'moshi'                  : '1.9.2',
        'rxJava'                 : '2.1.14',
        'rxAndroid'              : '2.0.2',
        'rxBinding'              : '2.2.0',
        'spekApi'                : '1.1.5',
        'junit'                  : '4.13',
        'junitPlatformRunner'    : '1.6.0',
        'spekJunitPlatformEngine': '1.1.5',
        'spekJunit'              : '1.1.5',
        'assertj'                : '3.14.0',
        'espresso'               : '3.1.0',
        'androidTest'            : '1.1.0',
        'stetho'                 : '1.5.0',
        'junitparams'            : '1.1.1',
        'crashlytics'            : '2.10.0',
        'coroutines'             : '1.2.1',
        'legacySupport'          : '1.0.0',
        'gson'                   : '2.8.6',
        'converter_gson'         : '2.6.0'
]

ext {
    versionMajor = 1
    versionMinor = 0
    versionPatch = 0
    ciJobId = System.getenv("CI_JOB_ID")
    branch = System.getenv("CI_COMMIT_REF_NAME")
}

def getAppVersionCode() {
    def majorMultiplier = 1000000
    def minorMultiplier = 1000
    return versionMajor * majorMultiplier + versionMinor * minorMultiplier + versionPatch
}

def getAppVersionName() {
    return versionMajor + "." + versionMinor + "." + versionPatch +
            (ciJobId != null ? "" + " ($ciJobId)" : "") +
            ((branch != null && branch.toString().startsWith("feature")) ? " [$branch]" : "")
}

buildscript {
    ext.kotlin_version = '1.3.71'
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.dawnwords:jacoco-badge-gradle-plugin:0.2.0"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.1"
        classpath 'gradle.plugin.org.jlleitschuh.gradle:ktlint-gradle:6.2.1'
        classpath 'org.jacoco:org.jacoco.core:0.8.4'
        classpath 'com.dicedmelon.gradle:jacoco-android:0.1.4'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

subprojects {
    apply plugin: "org.jlleitschuh.gradle.ktlint"
}

sonarqube {
    properties {
        property "sonar.projectName", "orderPay-Android"
        property "sonar.projectKey", "com.checkfer.orderpay.android"
        property "sonar.host.url", "http://35.178.66.251"
        property "sonar.language", "kotlin"
        property "sonar.sources", "src/main/"
        property "sonar.login", "admin"
        property "sonar.password", "W0XhFiiV8gP2"
        property "sonar.jacoco.reportPaths", "$project.buildDir/jacoco/jacocoMerge.exec"
        property "sonar.coverage.jacoco.xmlReportPaths", "$project.buildDir/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
        property "sonar.coverage.exclusions", ",**/api/**,**/lifecycle/**,**/navigation/**,**/di/**,**/model/**,**/test/**,**/interceptors/**,**/ui/**,**/Config.*,**/*Activity.*,**/*Fragment.*,**/*Presenter.*,**/*Adapter.*,**/androidTest/**,**/R.class,**/BuildConfig.*,**/*Configurations.*,**/*State.*,**/Manifest*.*,**/*Application.*,**/Result.*,**/ViewModelFactory.*,**/SingleLiveEvent.*,**/*Test*.*,**/com/checkfer/orderpay/databinding/*,**/com/checkfer/orderpay/generated/callback/*,**/*Dto*.*,**/android/databinding/*,**/androidx/databinding/*,**/di/module/*,**/*MapperImpl*.*,**/BuildConfig.*,**/*Component*.*,**/*BR*.*,**/Manifest*.*,**/*Companion*.*,**/*Module.*,**/*Dagger*.*,**/*MembersInjector*.*,**/*Extensions*.*,**/InputMethodManagerLeaks.*,**/*_Factory*.*,**/*_Provide*Factory*.*"
    }
}

apply from: "${rootDir}/jacoco.gradle"

task clean(type: Delete) {
    delete rootProject.buildDir
}